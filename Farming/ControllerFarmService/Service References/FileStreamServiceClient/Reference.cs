//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ControllerFarmService.FileStreamServiceClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileStreamServiceClient.IFileStreamService")]
    public interface IFileStreamService {
        
        // CODEGEN: Generating message contract since the operation SendFileAsStream is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStreamService/SendFileAsStream", ReplyAction="http://tempuri.org/IFileStreamService/SendFileAsStreamResponse")]
        ControllerFarmService.FileStreamServiceClient.SendFileAsStreamResponse SendFileAsStream(ControllerFarmService.FileStreamServiceClient.FileStreamedMessage request);
        
        // CODEGEN: Generating message contract since the operation SendFileChunkAsStream is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStreamService/SendFileChunkAsStream", ReplyAction="http://tempuri.org/IFileStreamService/SendFileChunkAsStreamResponse")]
        ControllerFarmService.FileStreamServiceClient.SendFileChunkAsStreamResponse SendFileChunkAsStream(ControllerFarmService.FileStreamServiceClient.ChunkedFileStreamedMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStreamService/GetFileAsStream", ReplyAction="http://tempuri.org/IFileStreamService/GetFileAsStreamResponse")]
        System.IO.Stream GetFileAsStream(string path, ulong taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStreamService/GetFileChunkAsStream", ReplyAction="http://tempuri.org/IFileStreamService/GetFileChunkAsStreamResponse")]
        System.IO.Stream GetFileChunkAsStream(string fpath, ulong taskId, int chunkNum, int chunkSize);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileStreamedMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FileStreamedMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FarmId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public ulong Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream Stream;
        
        public FileStreamedMessage() {
        }
        
        public FileStreamedMessage(string FarmId, string FileName, ulong Id, System.IO.Stream Stream) {
            this.FarmId = FarmId;
            this.FileName = FileName;
            this.Id = Id;
            this.Stream = Stream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SendFileAsStreamResponse {
        
        public SendFileAsStreamResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChunkedFileStreamedMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ChunkedFileStreamedMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public int ChunkSize;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FarmId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public int FilePart;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public ulong Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream Stream;
        
        public ChunkedFileStreamedMessage() {
        }
        
        public ChunkedFileStreamedMessage(int ChunkSize, string FarmId, string FileName, int FilePart, ulong Id, System.IO.Stream Stream) {
            this.ChunkSize = ChunkSize;
            this.FarmId = FarmId;
            this.FileName = FileName;
            this.FilePart = FilePart;
            this.Id = Id;
            this.Stream = Stream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SendFileChunkAsStreamResponse {
        
        public SendFileChunkAsStreamResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileStreamServiceChannel : ControllerFarmService.FileStreamServiceClient.IFileStreamService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileStreamServiceClient : System.ServiceModel.ClientBase<ControllerFarmService.FileStreamServiceClient.IFileStreamService>, ControllerFarmService.FileStreamServiceClient.IFileStreamService {
        
        public FileStreamServiceClient() {
        }
        
        public FileStreamServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileStreamServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileStreamServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileStreamServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ControllerFarmService.FileStreamServiceClient.SendFileAsStreamResponse ControllerFarmService.FileStreamServiceClient.IFileStreamService.SendFileAsStream(ControllerFarmService.FileStreamServiceClient.FileStreamedMessage request) {
            return base.Channel.SendFileAsStream(request);
        }
        
        public void SendFileAsStream(string FarmId, string FileName, ulong Id, System.IO.Stream Stream) {
            ControllerFarmService.FileStreamServiceClient.FileStreamedMessage inValue = new ControllerFarmService.FileStreamServiceClient.FileStreamedMessage();
            inValue.FarmId = FarmId;
            inValue.FileName = FileName;
            inValue.Id = Id;
            inValue.Stream = Stream;
            ControllerFarmService.FileStreamServiceClient.SendFileAsStreamResponse retVal = ((ControllerFarmService.FileStreamServiceClient.IFileStreamService)(this)).SendFileAsStream(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ControllerFarmService.FileStreamServiceClient.SendFileChunkAsStreamResponse ControllerFarmService.FileStreamServiceClient.IFileStreamService.SendFileChunkAsStream(ControllerFarmService.FileStreamServiceClient.ChunkedFileStreamedMessage request) {
            return base.Channel.SendFileChunkAsStream(request);
        }
        
        public void SendFileChunkAsStream(int ChunkSize, string FarmId, string FileName, int FilePart, ulong Id, System.IO.Stream Stream) {
            ControllerFarmService.FileStreamServiceClient.ChunkedFileStreamedMessage inValue = new ControllerFarmService.FileStreamServiceClient.ChunkedFileStreamedMessage();
            inValue.ChunkSize = ChunkSize;
            inValue.FarmId = FarmId;
            inValue.FileName = FileName;
            inValue.FilePart = FilePart;
            inValue.Id = Id;
            inValue.Stream = Stream;
            ControllerFarmService.FileStreamServiceClient.SendFileChunkAsStreamResponse retVal = ((ControllerFarmService.FileStreamServiceClient.IFileStreamService)(this)).SendFileChunkAsStream(inValue);
        }
        
        public System.IO.Stream GetFileAsStream(string path, ulong taskId) {
            return base.Channel.GetFileAsStream(path, taskId);
        }
        
        public System.IO.Stream GetFileChunkAsStream(string fpath, ulong taskId, int chunkNum, int chunkSize) {
            return base.Channel.GetFileChunkAsStream(fpath, taskId, chunkNum, chunkSize);
        }
    }
}
